# -*- coding: utf-8 -*-
"""Iris_DecisionTree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sJ1BEKCgDH28WFAdt-ThmBDZTEDFbHcA
"""

import streamlit as st
import numpy as np
import pickle

# Load the model
with open('Decision_Tree_classifier.pkl', 'rb') as f:
    model = pickle.load(f)

# Streamlit UI
st.title("Iris Species Classification Web App")
st.write("üîç This app uses a Decision Tree Classifier model to predict Car Price.")

SepalLengthCm=st.number_input("Enter SepalLengthCm",min_value=4.0 ,max_value=8.0)
SepalWidthCm=st.number_input("Enter SepalWidthCm",min_value= 1.0 ,max_value=4.0)
PetalLengthCm=st.number_input("Enter PetalLengthCm",min_value= 1.0,max_value=7.0)
PetalWidthCm=st.number_input("Enter PetalWidthCm",min_value= 0.0,max_value=3.0)

# Button to predict
if st.button("Predict Iris Species"):
    input_data = np.array([[
        SepalLengthCm,
        SepalWidthCm,
        PetalLengthCm,
        PetalWidthCm
    ]])

    #Prediction
    prediction = model.predict(input_data)[0]
    if prediction == 0:
    st.success(f"üü¢ Predicted Iris Class: Setosa")
elif prediction == 1:
    st.success(f"üü¢ Predicted Iris Class: Versicolor")
else:
    st.success(f"üü¢ Predicted Iris Class: Virginica")